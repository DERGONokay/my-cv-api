# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: mvn clean package

      - store_test_results:
          path: target/surefire-reports

      - run:
          name: Setup CF CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.run.pivotal.io  # alternately target your private Cloud Foundry deployment
            cf auth "$CF_USER" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"

      - run:
          name: CF Deploy
          command: |
            # push artifacts on "dark" subdomain, not yet starting so we can attach environment variables
            cf push --no-start my-cv-api-dark -f manifest.yml -n dark -d my-cv-api-spontaneous-antelope.cfapps.io
            # Pass CircleCI variables to Cloud Foundry (optional)
            cf set-env my-cv-api-dark circle_build_num ${CIRCLE_BUILD_NUM}
            cf set-env my-cv-api-dark circle_commit ${CIRCLE_SHA1}
            cf set-env my-cv-api-dark circle_workflow_guid ${CIRCLE_WORKFLOW_ID}
            cf set-env my-cv-api-dark circle_user ${CIRCLE_PROJECT_USERNAME}
            cf set-env my-cv-api-dark circle_repo ${CIRCLE_PROJECT_REPONAME}
            # Start the application
            cf start my-cv-api-dark
            # Ensure dark route is exclusive to dark app
            cf unmap-route my-cv-api my-cv-api-spontaneous-antelope.cfapps.io -n dark || echo "Dark Route Already exclusive"

      - run:
          name: Re-route live Domain to latest
          command: |
            # Send "real" url to new version
            cf map-route my-cv-api-dark my-cv-api-spontaneous-antelope.cfapps.io -n www
            # Stop sending traffic to previous version
            cf unmap-route my-cv-api my-cv-api-spontaneous-antelope.cfapps.io -n www
            # stop previous version
            cf stop my-cv-api
            # delete previous version
            cf delete my-cv-api -f
            # Switch name of "dark" version to claim correct name
            cf rename my-cv-api-dark my-cv-api
